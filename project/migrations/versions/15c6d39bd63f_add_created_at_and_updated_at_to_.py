"""Add created_at and updated_at to ProductItem

Revision ID: 15c6d39bd63f
Revises: 
Create Date: 2025-06-18 09:36:42.341450

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '15c6d39bd63f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('contact', sa.String(length=20), nullable=False),
    sa.Column('address', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('burgers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['product_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drinks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['product_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ingredient_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['product_items.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pizzas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['product_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('allmeat_pizzas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['pizzas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bottledwaters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['drinks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('breads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['ingredient_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cheeseburgers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['burgers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cokes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['drinks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hawaiian_pizzas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['pizzas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hotdogs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['ingredient_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('icedteas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['drinks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('overloadburgers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['burgers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pepperoni_pizzas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['pizzas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sauces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['ingredient_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spicyburgers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['burgers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('spicyburgers')
    op.drop_table('sauces')
    op.drop_table('pepperoni_pizzas')
    op.drop_table('overloadburgers')
    op.drop_table('icedteas')
    op.drop_table('hotdogs')
    op.drop_table('hawaiian_pizzas')
    op.drop_table('cokes')
    op.drop_table('cheeseburgers')
    op.drop_table('breads')
    op.drop_table('bottledwaters')
    op.drop_table('allmeat_pizzas')
    op.drop_table('pizzas')
    op.drop_table('ingredient_items')
    op.drop_table('drinks')
    op.drop_table('burgers')
    op.drop_table('suppliers')
    op.drop_table('product_items')
    # ### end Alembic commands ###
